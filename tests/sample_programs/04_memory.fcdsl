# Test 4: Memory operations and stateful logic
# Tests: Memory declaration, read(), write(), memory persistence

Memory counter = 0;
Memory accumulator = ("iron-plate", 100);

# Read current values
Signal current_count = read(counter);
Signal current_total = read(accumulator);

# Increment counter every tick
write(counter, current_count + 1);

# Conditional memory update
Signal input_value = 50;
Signal should_add = input_value > 0;
Signal new_total = current_total + (input_value * should_add);
write(accumulator, new_total);

# Memory-based state machine
Memory state = 0;
Signal current_state = read(state);
Signal next_state = (current_state + 1) % 4;
write(state, next_state);

# Use state for output
Signal output_multiplier = (current_state == 2) * 10 + 1;
Signal final_output = input_value * output_multiplier;
