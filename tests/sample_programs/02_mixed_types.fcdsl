# Test 2: Mixed-type arithmetic (should warn, left-operand wins)
# Tests: mixed-type rules, warnings, projection operator

Signal iron = input("iron-plate", 0);
Signal copper = input("copper-plate", 1);

# Mixed types - should warn and use left operand type (iron-plate)
Signal mixed_sum = iron + copper;

# Explicit projection to force different output type
Signal forced_copper = iron + copper | "copper-plate";

# Bundle operation
Bundle as_bundle = bundle(iron, copper);

# Project bundle to single channel  
Signal collapsed = as_bundle | "steel-plate";

# Comparison operations
Signal is_positive = iron > 0;
Signal are_equal = iron == copper;  # mixed type comparison

# Logical operations
Signal both_positive = (iron > 0) && (copper > 0);
Signal either_positive = (iron > 0) || (copper > 0);
