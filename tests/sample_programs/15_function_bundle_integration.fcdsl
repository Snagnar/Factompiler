# Test 15: Function and signal integration
# Tests: functions returning projected signals, memory interaction, nested calls

# Function that creates a multi-channel mix using projections
func create_resource_mix(iron_amount, copper_amount) {
    Signal processed_iron = (iron_amount * 2) | "iron-plate";
    Signal processed_copper = (copper_amount + 10) | "copper-plate";
    return processed_iron + processed_copper;
}

# Function that processes the aggregated signal
func process_mix(input_mix, multiplier) {
    Signal scaled_mix = input_mix * multiplier;
    Signal iron_component = scaled_mix | "iron-plate";
    Signal copper_component = scaled_mix | "copper-plate";
    return iron_component + copper_component;
}

# Function with memory that affects signal composition
func stateful_mix_creator(base_value) {
    Memory accumulator;
    Memory type_selector;

    write(0, accumulator, when=once);
    write(0, type_selector, when=once);

    Signal current_accum = read(accumulator);
    Signal selector = read(type_selector);

    write(current_accum + base_value, accumulator, when=1);
    write((selector + 1) % 3, type_selector, when=1);

    Signal iron_channel = ((selector == 0) * current_accum) | "iron-plate";
    Signal copper_channel = ((selector == 1) * current_accum) | "copper-plate";
    Signal coal_channel = ((selector == 2) * current_accum) | "coal";

    return iron_channel + copper_channel + coal_channel;
}

# Test inputs
Signal iron_input = ("iron-plate", 0);
Signal copper_input = ("copper-plate", 1);
Signal control_input = 120;

# Create mixes using functions
Signal basic_mix = create_resource_mix(iron_input, copper_input);
Signal processed_total = process_mix(basic_mix, 3);

# Stateful mix creation
Signal stateful_mix1 = stateful_mix_creator(control_input);
Signal stateful_mix2 = stateful_mix_creator(control_input + 5);
Signal stateful_mix3 = stateful_mix_creator(control_input * 2);

# Process stateful mixes
Signal stateful_total1 = process_mix(stateful_mix1, 2);
Signal stateful_total2 = process_mix(stateful_mix2, 1);

# Combine function results with additional projections
Signal manual_mix = (iron_input | "iron-plate") + (copper_input | "copper-plate");
Signal combined_mix = basic_mix + manual_mix;
Signal final_total = process_mix(combined_mix, 1);

# Function calls with projections as parameters
Signal iron_only = basic_mix | "iron-plate";
Signal copper_only = basic_mix | "copper-plate";
Signal specialized_mix = create_resource_mix(iron_only, copper_only);

# Complex nested function operations
Signal complex_result = process_mix(
    create_resource_mix(
        stateful_mix1 | "iron-plate",
        stateful_mix2 | "copper-plate"
    ),
    control_input % 5 + 1
);
